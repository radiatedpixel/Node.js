{
  "name": "connect-couchdb",
  "description": "CouchDB session store for Connect",
  "keywords": [
    "connect",
    "session",
    "couchdb",
    "middleware"
  ],
  "version": "0.2.5",
  "author": {
    "name": "Thomas Debarochez",
    "email": "thomas.barochez+npm@gmail.com"
  },
  "contributors": [
    {
      "name": "Ian Ward",
      "url": "https://github.com/ianshward"
    },
    {
      "name": "Ryan Kirkman",
      "url": "https://github.com/ryankirkman"
    },
    {
      "name": "Young Hahn",
      "url": "https://github.com/yhahn"
    },
    {
      "name": "Dan VerWeire",
      "url": "https://github.com/wankdanker"
    },
    {
      "name": "Pau Ramon Revilla",
      "url": "https://github.com/masylum"
    },
    {
      "name": "Konstantin Käfer",
      "url": "https://github.com/kkaefer"
    },
    {
      "name": "Daniel Bell",
      "url": "https://github.com/danbell"
    }
  ],
  "main": "./index.js",
  "dependencies": {
    "request": "2.x",
    "connect": "*"
  },
  "devDependencies": {
    "expresso": "0.9.x"
  },
  "scripts": {
    "test": "NODE_ENV=test expresso test/test.*.js"
  },
  "engines": {
    "node": ">= 0.3.0"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/tdebarochez/connect-couchdb.git"
  },
  "readme": "# Connect CouchDB\n\n`connect-couchdb` is a middleware session store for the connect framework.\n[![Build Status](https://secure.travis-ci.org/tdebarochez/connect-couchdb.png)](http://travis-ci.org/tdebarochez/connect-couchdb)\n\n## Requirements\n\n- request 2.x\n- couchdb 1.0.x or higher\n- expresso (only for tests)\n\n## Installation\n\nVia npm:\n\n    $ npm install connect-couchdb\n\n## Usage\n\n    var connect = require('connect'),\n        ConnectCouchDB = require('connect-couchdb')(connect);\n\n    var store = new ConnectCouchDB({\n      // Name of the database you would like to use for sessions.\n      name: 'myapp-sessions',\n\n      // Optional. How often expired sessions should be cleaned up.\n      // Defaults to 600000 (10 minutes).\n      reapInterval: 600000,\n\n      // Optional. How often to run DB compaction against the session\n      // database. Defaults to 300000 (5 minutes).\n      // To disable compaction, set compactInterval to -1\n      compactInterval: 300000\n    });\n    var server = connect.createServer();\n    server.use(connect.session({secret: 'YourSecretKey', store: store });\n\nIf the database specified doesn't already exist you have to create it with \n`tools/` files. Run following command to create database, populate with the\ndesign document and setup the CouchDB database specific option `_revs_limit` :\n\n    $ node tools/setup.js <database_name> <revs_limit> [username] [password]\n\nFor more informations about the `_revs_limit` option, read\n[this](http://wiki.apache.org/couchdb/HTTP_database_API#Accessing_Database-specific_options).\n\nIt is highly recommended that you use a separate database for your \nsessions for performance of both the session views and any other document \nviews you may have.\n\nSee `example.js` file for an example connect server using `connect-couch`.\n\n## Tests\n\n    $ npm test\n\n## Author\n\n- Thomas Debarochez ([tdebarochez](https://github.com/tdebarochez))\n\n## Contributors\n\n    $ git shortlog -s -n\n\n- Ian Ward ([ianshward](https://github.com/ianshward))\n- Ryan Kirkman ([ryankirkman](https://github.com/ryankirkman))\n- Young Hahn ([yhahn](https://github.com/yhahn))\n- Dan VerWeire ([wankdanker](https://github.com/wankdanker))\n- Pau Ramon Revilla ([masylum](https://github.com/masylum))\n- Konstantin Käfer ([kkaefer](https://github.com/kkaefer))\n- Daniel Bell ([danbell](https://github.com/danbell))\n",
  "readmeFilename": "README.md",
  "_id": "connect-couchdb@0.2.5",
  "_from": "connect-couchdb@latest"
}
